/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class gda_analysis_numerical_fourier_FFTW */

#ifndef _Included_gda_analysis_numerical_fourier_FFTW
#define _Included_gda_analysis_numerical_fourier_FFTW
#ifdef __cplusplus
extern "C" {
#endif
#undef gda_analysis_numerical_fourier_FFTW_FORWARD
#define gda_analysis_numerical_fourier_FFTW_FORWARD 1L
#undef gda_analysis_numerical_fourier_FFTW_BACKWARD
#define gda_analysis_numerical_fourier_FFTW_BACKWARD -1L
#undef gda_analysis_numerical_fourier_FFTW_EXHAUSTIVE
#define gda_analysis_numerical_fourier_FFTW_EXHAUSTIVE 8L
#undef gda_analysis_numerical_fourier_FFTW_PATIENT
#define gda_analysis_numerical_fourier_FFTW_PATIENT 32L
#undef gda_analysis_numerical_fourier_FFTW_ESTIMATE
#define gda_analysis_numerical_fourier_FFTW_ESTIMATE 64L
/*
 * Class:     gda_analysis_numerical_fourier_FFTW
 * Method:    nativeLoadWisdomFromFile
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_gda_analysis_numerical_fourier_FFTW_nativeLoadWisdomFromFile
  (JNIEnv *, jobject, jstring);

/*
 * Class:     gda_analysis_numerical_fourier_FFTW
 * Method:    nativeLoadWisdomFromString
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_gda_analysis_numerical_fourier_FFTW_nativeLoadWisdomFromString
  (JNIEnv *, jobject, jstring);

/*
 * Class:     gda_analysis_numerical_fourier_FFTW
 * Method:    nativeClearWisdom
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gda_analysis_numerical_fourier_FFTW_nativeClearWisdom
  (JNIEnv *, jobject);

/*
 * Class:     gda_analysis_numerical_fourier_FFTW
 * Method:    nativeExportWisdomToFile
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_gda_analysis_numerical_fourier_FFTW_nativeExportWisdomToFile
  (JNIEnv *, jobject, jstring);

/*
 * Class:     gda_analysis_numerical_fourier_FFTW
 * Method:    nativeGetWisdom
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_gda_analysis_numerical_fourier_FFTW_nativeGetWisdom
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
