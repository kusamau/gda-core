/*-
 * Copyright Â© 2009 Diamond Light Source Ltd., Science and Technology
 * Facilities Council Daresbury Laboratory
 *
 * This file is part of GDA.
 *
 * GDA is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License version 3 as published by the Free
 * Software Foundation.
 *
 * GDA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with GDA. If not, see <http://www.gnu.org/licenses/>.
 */

#include <device.idl>

module gda {
module function {
module lookup {
module corba {

	typedef sequence<string> stringarray;
	
	typedef sequence<double> doubleArray;
	
/**
 * An Interface for Distributed Lookup File Reader class
 */

interface CorbaLookup : gda::_factory::corba::CorbaFindable
{
   void  setFilename(in string fileName);
   
   void  reload();

   stringarray getScannableNames()raises (device::corba::CorbaDeviceException);
      
   double lookupValue(in any energy, in string scannableName)raises (device::corba::CorbaDeviceException);
   
   string lookupUnitString(in string scannableName)raises (device::corba::CorbaDeviceException);
   
   long lookupDecimalPlaces(in string scannableName)raises (device::corba::CorbaDeviceException);
   
   long getNumberOfRows()raises (device::corba::CorbaDeviceException);
   
   string getFilename();
   
   doubleArray getLookupKeys()raises (device::corba::CorbaDeviceException);
};

};};};};
