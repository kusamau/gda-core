/*-
 * Copyright Â© 2009 Diamond Light Source Ltd., Science and Technology
 * Facilities Council Daresbury Laboratory
 *
 * This file is part of GDA.
 *
 * GDA is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License version 3 as published by the Free
 * Software Foundation.
 *
 * GDA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with GDA. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _ENUMPOSITIONER_IDL_
#define _ENUMPOSITIONER_IDL_

#include <scannable.idl>

module gda {
module device {
module enumpositioner {
module corba {

enum CorbaEnumPositionerStatus
{
   IDLE,
   MOVING,
   ERROR
};

   
/**
 * A interface for distributed objects which operate Epics Positioners.  These 
 * are moveable devices which have a enumerated set of locations to move to.
 */
interface CorbaEnumPositioner : device::scannable::corba::CorbaScannable
{

   typedef sequence<string> stringArray;
   
   stringArray getPositions() raises (device::corba::CorbaDeviceException);
      
   CorbaEnumPositionerStatus getStatus() raises (device::corba::CorbaDeviceException);

}; 


};};};};

#endif
