/*-
 * Copyright Â© 2009 Diamond Light Source Ltd., Science and Technology
 * Facilities Council Daresbury Laboratory
 *
 * This file is part of GDA.
 *
 * GDA is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License version 3 as published by the Free
 * Software Foundation.
 *
 * GDA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with GDA. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _MULTICHANNELSCALER_IDL_
#define _MULTICHANNELSCALER_IDL_

#include <detector.idl>

module gda {
	module device {
		module detector {
			module multichannelscaler {
				module corba {

					typedef sequence<long> longArray;
					typedef sequence<string> stringArray;

					typedef long dataArray[32][35000]; 

						/**
						 *  An interface for a distributed Multi-Channel Scaler Detector class
						 */
						interface CorbaMultiChannelScaler : device::detector::corba::CorbaDetector
						{
						   /**
						    * start
						    */
						   /*void erasestart() raises (device::corba::CorbaDeviceException);
						
						   void stop() raises (device::corba::CorbaDeviceException);
						
						   void start() raises (device::corba::CorbaDeviceException);
						
						   void erase() raises (device::corba::CorbaDeviceException);*/
						
						   double getElapsedTime() raises (device::corba::CorbaDeviceException);
						   
						   double getElapsedTimeFromEpics() raises (device::corba::CorbaDeviceException);
						   
						   longArray getChannelData(in long channel) raises (device::corba::CorbaDeviceException);
						
						   dataArray getData() raises (device::corba::CorbaDeviceException);
						};
					};
				};
			};
		};
	};

#endif

